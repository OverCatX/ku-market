name: Feature CI

on:
  push:
    branches:
      - "features/**"
      - "feature/**"
      - "feat/**"

env:
  NODE_VERSION: 20

jobs:
  # ===== FRONTEND - INSTALL & CACHE =====
  fe-install:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: "npm"
          cache-dependency-path: frontend/package-lock.json

      - name: Install dependencies
        run: npm ci --prefix frontend

      - name: Cache node_modules
        uses: actions/cache/save@v4
        with:
          path: frontend/node_modules
          key: fe-node-modules-${{ runner.os }}-${{ hashFiles('frontend/package-lock.json') }}

  # ===== FRONTEND - LINT =====
  fe-lint:
    runs-on: ubuntu-latest
    needs: fe-install
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Restore node_modules
        uses: actions/cache/restore@v4
        with:
          path: frontend/node_modules
          key: fe-node-modules-${{ runner.os }}-${{ hashFiles('frontend/package-lock.json') }}

      - name: Check if lint script exists
        id: check-lint
        run: |
          if npm run --prefix frontend | grep -q "lint"; then
            echo "has_lint=true" >> $GITHUB_OUTPUT
          else
            echo "has_lint=false" >> $GITHUB_OUTPUT
          fi

      - name: Run lint
        if: steps.check-lint.outputs.has_lint == 'true'
        run: npm run lint --prefix frontend

      - name: Skip lint
        if: steps.check-lint.outputs.has_lint == 'false'
        run: echo "⚠️ No lint script found, skipping..."

  # ===== FRONTEND - TYPE CHECK =====
  fe-typecheck:
    runs-on: ubuntu-latest
    needs: fe-install
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Restore node_modules
        uses: actions/cache/restore@v4
        with:
          path: frontend/node_modules
          key: fe-node-modules-${{ runner.os }}-${{ hashFiles('frontend/package-lock.json') }}

      - name: Check if type-check script exists
        id: check-typecheck
        run: |
          if npm run --prefix frontend | grep -q "type-check"; then
            echo "has_typecheck=true" >> $GITHUB_OUTPUT
          else
            echo "has_typecheck=false" >> $GITHUB_OUTPUT
          fi

      - name: Run type-check
        if: steps.check-typecheck.outputs.has_typecheck == 'true'
        run: npm run type-check --prefix frontend

      - name: Skip type-check
        if: steps.check-typecheck.outputs.has_typecheck == 'false'
        run: echo "⚠️ No type-check script found, skipping..."

  # ===== FRONTEND - TEST =====
  fe-test:
    runs-on: ubuntu-latest
    needs: fe-install
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Restore node_modules
        uses: actions/cache/restore@v4
        with:
          path: frontend/node_modules
          key: fe-node-modules-${{ runner.os }}-${{ hashFiles('frontend/package-lock.json') }}

      - name: Check if test script exists
        id: check-test
        run: |
          if npm run --prefix frontend | grep -q "test"; then
            echo "has_test=true" >> $GITHUB_OUTPUT
          else
            echo "has_test=false" >> $GITHUB_OUTPUT
          fi

      - name: Run tests
        if: steps.check-test.outputs.has_test == 'true'
        run: npm test --prefix frontend -- --maxWorkers=2 --bail
        env:
          CI: true

      - name: Skip tests
        if: steps.check-test.outputs.has_test == 'false'
        run: echo "⚠️ No test script found, skipping..."

  # ===== FRONTEND - BUILD =====
  fe-build:
    runs-on: ubuntu-latest
    needs: [fe-lint, fe-typecheck, fe-test]
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Restore node_modules
        uses: actions/cache/restore@v4
        with:
          path: frontend/node_modules
          key: fe-node-modules-${{ runner.os }}-${{ hashFiles('frontend/package-lock.json') }}

      - name: Build
        run: npm run build --prefix frontend

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: frontend-build
          path: frontend/dist
          retention-days: 1

  # ===== BACKEND - INSTALL & CACHE =====
  be-install:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: "npm"
          cache-dependency-path: backend/package-lock.json

      - name: Install dependencies
        run: npm ci --prefix backend

      - name: Cache node_modules
        uses: actions/cache/save@v4
        with:
          path: backend/node_modules
          key: be-node-modules-${{ runner.os }}-${{ hashFiles('backend/package-lock.json') }}

  # ===== BACKEND - LINT =====
  be-lint:
    runs-on: ubuntu-latest
    needs: be-install
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Restore node_modules
        uses: actions/cache/restore@v4
        with:
          path: backend/node_modules
          key: be-node-modules-${{ runner.os }}-${{ hashFiles('backend/package-lock.json') }}

      - name: Check if lint script exists
        id: check-lint
        run: |
          if npm run --prefix backend | grep -q "lint"; then
            echo "has_lint=true" >> $GITHUB_OUTPUT
          else
            echo "has_lint=false" >> $GITHUB_OUTPUT
          fi

      - name: Run lint
        if: steps.check-lint.outputs.has_lint == 'true'
        run: npm run lint --prefix backend

      - name: Skip lint
        if: steps.check-lint.outputs.has_lint == 'false'
        run: echo "⚠️ No lint script found, skipping..."

  # ===== BACKEND - TYPE CHECK =====
  be-typecheck:
    runs-on: ubuntu-latest
    needs: be-install
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Restore node_modules
        uses: actions/cache/restore@v4
        with:
          path: backend/node_modules
          key: be-node-modules-${{ runner.os }}-${{ hashFiles('backend/package-lock.json') }}

      - name: Check if type-check script exists
        id: check-typecheck
        run: |
          if npm run --prefix backend | grep -q "type-check"; then
            echo "has_typecheck=true" >> $GITHUB_OUTPUT
          else
            echo "has_typecheck=false" >> $GITHUB_OUTPUT
          fi

      - name: Run type-check
        if: steps.check-typecheck.outputs.has_typecheck == 'true'
        run: npm run type-check --prefix backend

      - name: Skip type-check
        if: steps.check-typecheck.outputs.has_typecheck == 'false'
        run: echo "⚠️ No type-check script found, skipping..."

  # ===== BACKEND - UNIT TEST =====
  be-unit-test:
    runs-on: ubuntu-latest
    needs: be-install
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Restore node_modules
        uses: actions/cache/restore@v4
        with:
          path: backend/node_modules
          key: be-node-modules-${{ runner.os }}-${{ hashFiles('backend/package-lock.json') }}

      - name: Check if test script exists
        id: check-test
        run: |
          if npm run --prefix backend | grep -q "test"; then
            echo "has_test=true" >> $GITHUB_OUTPUT
          else
            echo "has_test=false" >> $GITHUB_OUTPUT
          fi

      - name: Run unit tests
        if: steps.check-test.outputs.has_test == 'true'
        run: npm test --prefix backend -- --maxWorkers=2 --bail
        env:
          CI: true
          NODE_ENV: test

      - name: Skip tests
        if: steps.check-test.outputs.has_test == 'false'
        run: echo "⚠️ No test script found, skipping..."

  # ===== BACKEND - BUILD =====
  be-build:
    runs-on: ubuntu-latest
    needs: [be-lint, be-typecheck, be-unit-test]
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Restore node_modules
        uses: actions/cache/restore@v4
        with:
          path: backend/node_modules
          key: be-node-modules-${{ runner.os }}-${{ hashFiles('backend/package-lock.json') }}

      - name: Build
        run: npm run build --prefix backend

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: backend-build
          path: backend/dist
          retention-days: 1

  # ===== SUMMARY =====
  feature-ci-summary:
    runs-on: ubuntu-latest
    needs: [fe-build, be-build]
    if: always()
    steps:
      - name: Check results
        run: |
          echo "## 📊 Feature CI Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Branch:** \`${{ github.ref_name }}\`" >> $GITHUB_STEP_SUMMARY
          echo "**Author:** @${{ github.actor }}" >> $GITHUB_STEP_SUMMARY
          echo "**Commit:** \`${{ github.sha }}\`" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY

          if [ "${{ needs.fe-build.result }}" == "failure" ] || [ "${{ needs.be-build.result }}" == "failure" ]; then
            echo "### ❌ CI Failed" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "- Frontend: ${{ needs.fe-build.result }}" >> $GITHUB_STEP_SUMMARY
            echo "- Backend: ${{ needs.be-build.result }}" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "Please fix the failing checks and push again." >> $GITHUB_STEP_SUMMARY
            exit 1
          else
            echo "### ✅ All Checks Passed" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "- Frontend: ✅ Passed" >> $GITHUB_STEP_SUMMARY
            echo "- Backend: ✅ Passed" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "🚀 Ready to create PR to develop branch!" >> $GITHUB_STEP_SUMMARY
          fi

      - name: Success message
        if: success()
        run: |
          echo "✅ Feature branch checks passed! 🚀"
          echo "Ready to create PR to develop branch"
