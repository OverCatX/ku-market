name: Develop CI

on:
  push:
    branches:
      - develop

jobs:
  # ===== SETUP =====
  setup:
    runs-on: ubuntu-latest
    outputs:
      workspace: ${{ github.workspace }}
    steps:
      - uses: actions/checkout@v4
      - name: Set Node version
        uses: actions/setup-node@v4
        with:
          node-version: 20

  # ===== FRONTEND =====
  fe-install:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
      - run: npm ci --prefix frontend

  fe-lint:
    runs-on: ubuntu-latest
    needs: fe-install
    steps:
      - run: npm run lint --prefix frontend

  fe-build:
    runs-on: ubuntu-latest
    needs: fe-lint
    steps:
      - run: npm run build --prefix frontend

  fe-unit-test:
    runs-on: ubuntu-latest
    needs: fe-build
    steps:
      - run: npm test --prefix frontend

  # ===== BACKEND =====
  be-install:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
      - run: npm ci --prefix backend

  be-lint:
    runs-on: ubuntu-latest
    needs: be-install
    steps:
      - run: npm run lint --prefix backend

  be-build:
    runs-on: ubuntu-latest
    needs: be-lint
    steps:
      - run: npm run build --prefix backend

  be-unit-test:
    runs-on: ubuntu-latest
    needs: be-build
    steps:
      - run: npm test --prefix backend

  # ===== DOCKER INTEGRATION TEST =====
  docker-integration:
    runs-on: ubuntu-latest
    needs: [fe-build, be-build]
    services:
      mongo:
        image: mongo:7
        ports:
          - 27017:27017
        options: >-
          --health-cmd "mongo --eval 'db.adminCommand(\"ping\")'"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - uses: actions/checkout@v4
      - name: Build FE Docker
        run: docker build -t ci-frontend ./frontend
      - name: Build BE Docker
        run: docker build -t ci-backend ./backend
      - name: Start Docker Compose
        run: |
          docker-compose -f docker-compose.ci.yml up -d
      - name: Wait for services
        run: |
          echo "Waiting 15s for containers to be ready"
          sleep 15
      - name: Run integration tests
        env:
          MONGO_URI: mongodb://localhost:27017/testdb
        run: docker exec ci-backend npm run test:integration
      - name: Run e2e tests
        run: docker exec ci-frontend npm run test:e2e
      - name: Tear down
        run: docker-compose -f docker-compose.ci.yml down
